// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique // ID dari Clerk
  email     String   @unique
  name      String?
  imageUrl  String?
  role      Role     @default(USER) // Peran default adalah USER
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  events    Event[]  // User bisa membuat banyak event
  articles  Article[] // User bisa membuat banyak artikel

  @@map("users")
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String?
  content     String?
  imageUrl    String?
  startDate   DateTime
  endDate     DateTime?
  location    String?
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  authorId    String
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("events")
}

model Article {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  excerpt     String?
  content     String?
  imageUrl    String?
  isPublished Boolean  @default(false)
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  authorId    String
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("articles")
}

enum Role {
  USER
  ADMIN
}
